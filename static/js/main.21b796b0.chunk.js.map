{"version":3,"sources":["components/Gameplay.js","components/Cards.js","App.js","index.js"],"names":["Gameplay","props","characters","useState","currScore","setCurrScore","highScore","setHighScore","updateScoreBoard","e","target","id","updateScore","find","item","length","checkScore","cards","sort","Math","random","map","card","className","src","image","alt","name","onClick","uniqid","Cards","char","setChar","loading","setLoading","useEffect","a","fetch","response","json","data","console","error","getRick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAmDeA,EA/CE,SAAAC,GACb,IAmBmBC,EAnBnB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAuBMC,EAAmB,SAACC,IArBN,SAACA,GACjBJ,EAAa,GAAD,mBAAKD,GAAL,CAAgBK,EAAEC,OAAOC,MAqBrCC,CAAYH,GAlBG,SAACA,GACOL,EAAUS,MAAK,SAACC,GAAW,OAAOA,IAASL,EAAEC,OAAOC,QAGnEP,EAAUW,OAAST,GACnBC,EAAaH,EAAUW,QAE3BV,EAAa,KAYjBW,CAAWP,IAGf,OACI,gCACI,qBAAIE,GAAG,YAAP,oBAA2BP,EAAUW,OAArC,mBAA6DT,KAC7D,qBAAKK,GAAG,eAAR,UAbWT,EAcID,EAAMgB,MAbDf,EAAWgB,MAAK,kBAAMC,KAAKC,SAAW,OAa9BC,KAAI,SAACC,GACzB,OACI,sBAAoBC,UAAU,OAA9B,UACI,qBAAKC,IAAKF,EAAKG,MAAOC,IAAKJ,EAAKK,KAAMhB,GAAIW,EAAKX,GAAIiB,QAASpB,IAC5D,oBAAIe,UAAU,WAAd,SAA0BD,EAAKK,SAFzBE,gBCRnBC,EA7BD,WACV,MAAwB3B,mBAAS,IAAjC,mBAAO4B,EAAP,KAAaC,EAAb,KACA,EAA8B7B,oBAAS,GAAvC,mBAAO8B,EAAP,KAAgBC,EAAhB,KAoBA,OAjBAC,qBAAU,YACO,uCAAG,gCAAAC,EAAA,sEAEFlC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAFjC,SAGemC,MAAM,6CAAD,OAA8CnC,IAHlE,cAGFoC,EAHE,gBAIWA,EAASC,OAJpB,cAIFC,EAJE,OAMRR,EAAQQ,GACRN,GAAW,GAPH,kBAQDM,GARC,kCAURC,QAAQC,MAAM,SAVN,0DAAH,qDAabC,KACD,IAGC,8BACKV,EAAU,6CAAwB,cAAC,EAAD,CAAUhB,MAAOc,O,MCfjDa,MATf,WACE,OACE,sBAAKrB,UAAU,MAAf,UACE,oBAAIZ,GAAG,QAAP,8BACA,cAAC,EAAD,QCHNkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.21b796b0.chunk.js","sourcesContent":["import uniqid from \"uniqid\"\nimport { useState } from \"react\"\nimport \"./styles/display.css\"\n\nconst Gameplay = props => {\n    const [currScore, setCurrScore] = useState([])\n    const [highScore, setHighScore] = useState(0)\n\n    const updateScore = (e) => {\n        setCurrScore([...currScore, e.target.id])\n    }\n\n    const checkScore = (e) => {\n        const alreadyClicked = currScore.find((item) => { return item === e.target.id })\n        //Restarts Game\n        if (alreadyClicked) {\n            if (currScore.length > highScore) {\n                setHighScore(currScore.length)\n            }\n            setCurrScore([])\n        }\n    }\n\n    //Randomizes Cards onClick\n    const randomize = (characters) => {\n        const randomizedChars = characters.sort(() => Math.random() - 0.5)\n        return randomizedChars\n    }\n\n    const updateScoreBoard = (e) => {\n        updateScore(e)\n        checkScore(e)\n    }\n\n    return (\n        <div>\n            <h2 id=\"scoreCard\">Score: {currScore.length} || High Score: {highScore}</h2>\n            <div id=\"displayCards\">\n                {randomize(props.cards).map((card) => {\n                    return (\n                        <div key={uniqid()} className=\"card\">\n                            <img src={card.image} alt={card.name} id={card.id} onClick={updateScoreBoard} />\n                            <h3 className=\"charInfo\">{card.name}</h3>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Gameplay","import { useEffect, useState } from \"react\"\nimport Gameplay from \"./Gameplay\"\n\nconst Cards = () => {\n    const [char, setChar] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    //Gets characters on component mount\n    useEffect(() => {\n        const getRick = async () => {\n            try {\n                const characters = [1, 2, 3, 4, 5, 6, 7, 8]\n                const response = await fetch(`https://rickandmortyapi.com/api/character/${characters}`)\n                const data = await response.json()\n\n                setChar(data)\n                setLoading(false)\n                return data\n            } catch {\n                console.error(\"Error\")\n            }\n        }\n        getRick()\n    }, [])\n\n    return (\n        <div>\n            {loading ? <div>Loading...</div> : <Gameplay cards={char} />}\n        </div>\n    )\n}\n\nexport default Cards","import Cards from \"./components/Cards\"\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 id=\"title\">Memory Card Game</h1>\n      <Cards />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}